"""user's relation with profile & posts

Revision ID: 5d08a6590df3
Revises: 57ae0b2357b0
Create Date: 2025-03-10 20:18:50.751308

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "5d08a6590df3"
down_revision: Union[str, None] = "57ae0b2357b0"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "profiles",
        sa.Column("first_name", sa.String(length=50), nullable=True),
        sa.Column("last_name", sa.String(length=50), nullable=True),
        sa.Column("bio", sa.String(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )

    # Используем batch mode для изменения существующей таблицы
    with op.batch_alter_table("posts") as batch_op:
        batch_op.create_unique_constraint("uq_posts_user_id", ["user_id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("posts") as batch_op:
        batch_op.drop_constraint("uq_posts_user_id", type_="unique")

    op.drop_table("profiles")
    # ### end Alembic commands ###
